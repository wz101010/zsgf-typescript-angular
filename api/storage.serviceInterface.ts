/**
 * 全部 API 文档
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { BooleanApiResponse } from '../model/models';
import { ExecuteFunctionRequest } from '../model/models';
import { Int64ApiResponse } from '../model/models';
import { ObjectApiResponse } from '../model/models';
import { ObjectListApiResponse } from '../model/models';
import { PostIndexRequest } from '../model/models';
import { StorageListResultApiResponse } from '../model/models';
import { StringApiResponse } from '../model/models';
import { StringListApiResponse } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface StorageAggregateRequestParams {
    table: string;
    appKey: string;
    pipeline?: string;
}

export interface StorageBatchUpdateRequestParams {
    table: string;
    filter: string;
    appKey: string;
    requestBody: Array<any>;
    replace?: boolean;
}

export interface StorageClearRequestParams {
    table: string;
    appKey: string;
    filter?: string;
}

export interface StorageDeleteRequestParams {
    table: string;
    id: string;
    appKey: string;
}

export interface StorageDeleteIndexRequestParams {
    table: string;
    appKey: string;
    indexName?: string;
}

export interface StorageDetailRequestParams {
    table: string;
    id: string;
    appKey: string;
    project?: string;
}

export interface StorageExecuteFunctionRequestParams {
    nonce: string;
    timestamp: number;
    signature: string;
    appKey: string;
    executeFunctionRequest?: ExecuteFunctionRequest;
}

export interface StorageExportRequestParams {
    table: string;
    appKey: string;
    filter?: string;
    startTime?: string;
    endTime?: string;
}

export interface StorageImportRequestParams {
    table: string;
    appKey: string;
    file?: Blob;
}

export interface StorageIndexesRequestParams {
    table: string;
    appKey: string;
}

export interface StorageListRequestParams {
    table: string;
    appKey: string;
    filter?: string;
    project?: string;
    sort?: string;
    startTime?: string;
    endTime?: string;
    explain?: boolean;
    take?: number;
    skip?: number;
}

export interface StoragePostRequestParams {
    table: string;
    appKey: string;
    requestBody: Array<any>;
}

export interface StoragePostIndexRequestParams {
    table: string;
    appKey: string;
    postIndexRequest?: PostIndexRequest;
}

export interface StoragePutRequestParams {
    table: string;
    id: string;
    appKey: string;
    requestBody: Array<any>;
    replace?: boolean;
}

export interface StorageRemoveRequestParams {
    table: string;
    appKey: string;
}

export interface StorageStatsRequestParams {
    table: string;
    appKey: string;
}

export interface StorageTablesRequestParams {
    appKey: string;
}


export interface StorageServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 聚合查询
     * 根据聚合管道查询指定表中的数据
* @param requestParameters
     */
    storageAggregate(requestParameters: StorageAggregateRequestParams, extraHttpRequestParams?: any): Observable<ObjectListApiResponse>;

    /**
     * 批量更新指定条件的数据
     * 批量更新指定表中符合条件的文档，可以动态指定查询条件和更新字段
* @param requestParameters
     */
    storageBatchUpdate(requestParameters: StorageBatchUpdateRequestParams, extraHttpRequestParams?: any): Observable<BooleanApiResponse>;

    /**
     * 清空表数据
     * 根据筛选条件清空指定表中的数据
* @param requestParameters
     */
    storageClear(requestParameters: StorageClearRequestParams, extraHttpRequestParams?: any): Observable<Int64ApiResponse>;

    /**
     * 删除数据
     * 删除指定表中指定ID的数据
* @param requestParameters
     */
    storageDelete(requestParameters: StorageDeleteRequestParams, extraHttpRequestParams?: any): Observable<BooleanApiResponse>;

    /**
     * 删除索引
     * 删除指定表的指定索引
* @param requestParameters
     */
    storageDeleteIndex(requestParameters: StorageDeleteIndexRequestParams, extraHttpRequestParams?: any): Observable<BooleanApiResponse>;

    /**
     * 数据详情
     * 获取指定表中指定ID的数据详情
* @param requestParameters
     */
    storageDetail(requestParameters: StorageDetailRequestParams, extraHttpRequestParams?: any): Observable<ObjectApiResponse>;

    /**
     * 执行函数
     * 执行指定的函数
* @param requestParameters
     */
    storageExecuteFunction(requestParameters: StorageExecuteFunctionRequestParams, extraHttpRequestParams?: any): Observable<ObjectApiResponse>;

    /**
     * 导出数据
     * 根据筛选条件导出指定表中的数据
* @param requestParameters
     */
    storageExport(requestParameters: StorageExportRequestParams, extraHttpRequestParams?: any): Observable<Blob>;

    /**
     * 导入数据
     * 从文件导入数据到指定表中
* @param requestParameters
     */
    storageImport(requestParameters: StorageImportRequestParams, extraHttpRequestParams?: any): Observable<BooleanApiResponse>;

    /**
     * 获取索引
     * 获取指定表的索引列表
* @param requestParameters
     */
    storageIndexes(requestParameters: StorageIndexesRequestParams, extraHttpRequestParams?: any): Observable<ObjectListApiResponse>;

    /**
     * 查询数据
     * 根据条件查询指定表中的数据
* @param requestParameters
     */
    storageList(requestParameters: StorageListRequestParams, extraHttpRequestParams?: any): Observable<StorageListResultApiResponse>;

    /**
     * 添加数据
     * 向指定表中添加数据，可以是单个json对象或json数组
* @param requestParameters
     */
    storagePost(requestParameters: StoragePostRequestParams, extraHttpRequestParams?: any): Observable<StringApiResponse>;

    /**
     * 添加索引
     * 为指定表添加索引
* @param requestParameters
     */
    storagePostIndex(requestParameters: StoragePostIndexRequestParams, extraHttpRequestParams?: any): Observable<StringApiResponse>;

    /**
     * 更新数据
     * 更新指定表中指定ID的数据，可以选择全量更新或部分更新
* @param requestParameters
     */
    storagePut(requestParameters: StoragePutRequestParams, extraHttpRequestParams?: any): Observable<BooleanApiResponse>;

    /**
     * 删除表
     * 删除指定表
* @param requestParameters
     */
    storageRemove(requestParameters: StorageRemoveRequestParams, extraHttpRequestParams?: any): Observable<BooleanApiResponse>;

    /**
     * 数据表统计
     * 获取指定表的数据统计信息
* @param requestParameters
     */
    storageStats(requestParameters: StorageStatsRequestParams, extraHttpRequestParams?: any): Observable<ObjectApiResponse>;

    /**
     * 获取数据表
     * 获取当前应用的所有数据表名称
* @param requestParameters
     */
    storageTables(requestParameters: StorageTablesRequestParams, extraHttpRequestParams?: any): Observable<StringListApiResponse>;

}
